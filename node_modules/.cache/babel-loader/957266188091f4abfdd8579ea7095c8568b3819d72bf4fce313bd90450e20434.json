{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinio\\\\Hemo-System---Fron\\\\src\\\\components\\\\Hemose\\\\AdmMed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport '../../styles/Adm.med.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst normalizarTexto = texto => texto.normalize(\"NFD\").replace(/[̀-ͯ]/g, \"\").replace(/\\s+/g, \" \").trim().toLowerCase();\nconst formatarStatus = status => {\n  switch (status) {\n    case \"aguardando\":\n      return \"Aguardando\";\n    case \"triagem\":\n      return \"Em Triagem\";\n    case \"consulta\":\n      return \"Em Consulta\";\n    default:\n      return status;\n  }\n};\nconst pacientesIniciais = [{\n  nome: \"Ana Paula Lima\",\n  cpf: \"123.456.789-00\",\n  status: \"aguardando\",\n  tipoAtendimento: \"Consulta\",\n  horario: \"08:30\"\n}, {\n  nome: \"Carlos Souza\",\n  cpf: \"987.654.321-11\",\n  status: \"triagem\",\n  tipoAtendimento: \"Triagem\",\n  horario: \"08:45\"\n}, {\n  nome: \"Fernanda Alves\",\n  cpf: \"111.222.333-44\",\n  status: \"consulta\",\n  tipoAtendimento: \"Consulta\",\n  horario: \"09:00\"\n}];\nconst RecepcaoRedirecionamento = () => {\n  _s();\n  const [popupMenuAberto, setPopupMenuAberto] = useState(false);\n  const [overlayAberto, setOverlayAberto] = useState(false);\n  const [pacientes, setPacientes] = useState(pacientesIniciais);\n  const [busca, setBusca] = useState(\"\");\n  const [statusFiltro, setStatusFiltro] = useState(\"\");\n  const [pacientesFiltrados, setPacientesFiltrados] = useState(pacientesIniciais);\n  const [modalVerDadosAberto, setModalVerDadosAberto] = useState(false);\n  const [modalDirecionarAberto, setModalDirecionarAberto] = useState(false);\n  const [pacienteSelecionado, setPacienteSelecionado] = useState(null);\n  const [idxPacienteDirecionar, setIdxPacienteDirecionar] = useState(null);\n  const alternarPopupMenu = () => {\n    setPopupMenuAberto(prev => !prev);\n    setOverlayAberto(prev => !prev);\n  };\n  const fecharOverlay = () => {\n    setPopupMenuAberto(false);\n    setOverlayAberto(false);\n  };\n  const filtrarPacientes = () => {\n    const textoBusca = normalizarTexto(busca);\n    const buscaNumeros = textoBusca.replace(/\\D/g, \"\");\n    return pacientes.filter(p => {\n      const nomeNorm = normalizarTexto(p.nome);\n      const cpfNorm = p.cpf.replace(/\\D/g, \"\");\n      if (!textoBusca) return !statusFiltro || p.status === statusFiltro;\n      if (buscaNumeros && !isNaN(Number(buscaNumeros))) return cpfNorm.includes(buscaNumeros) && (!statusFiltro || p.status === statusFiltro);\n      return nomeNorm.includes(textoBusca) && (!statusFiltro || p.status === statusFiltro);\n    });\n  };\n  useEffect(() => {\n    setPacientesFiltrados(filtrarPacientes());\n  }, [busca, statusFiltro, pacientes]);\n  const abrirModalVerDados = paciente => {\n    setPacienteSelecionado(paciente);\n    setModalVerDadosAberto(true);\n    setOverlayAberto(true);\n  };\n  const abrirModalDirecionar = idx => {\n    setIdxPacienteDirecionar(idx);\n    setPacienteSelecionado(pacientes[idx]);\n    setModalDirecionarAberto(true);\n    setOverlayAberto(true);\n  };\n  const fecharModais = () => {\n    setModalVerDadosAberto(false);\n    setModalDirecionarAberto(false);\n    setOverlayAberto(false);\n  };\n  const handleDirecionarSubmit = e => {\n    e.preventDefault();\n    if (idxPacienteDirecionar === null) return;\n    const form = new FormData(e.target);\n    const novoStatus = form.get(\"setorDestino\");\n    const novaPrioridade = form.get(\"prioridadeDestino\");\n    setPacientes(prev => prev.map((p, i) => i === idxPacienteDirecionar ? {\n      ...p,\n      status: novoStatus,\n      prioridade: novaPrioridade\n    } : p));\n    alert(\"Paciente direcionado com sucesso!\");\n    fecharModais();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(RecepcaoRedirecionamento, \"elojPcbESq3iYmTiEAH8dRw+qx8=\");\n_c = RecepcaoRedirecionamento;\nexport default RecepcaoRedirecionamento;\nvar _c;\n$RefreshReg$(_c, \"RecepcaoRedirecionamento\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","normalizarTexto","texto","normalize","replace","trim","toLowerCase","formatarStatus","status","pacientesIniciais","nome","cpf","tipoAtendimento","horario","RecepcaoRedirecionamento","_s","popupMenuAberto","setPopupMenuAberto","overlayAberto","setOverlayAberto","pacientes","setPacientes","busca","setBusca","statusFiltro","setStatusFiltro","pacientesFiltrados","setPacientesFiltrados","modalVerDadosAberto","setModalVerDadosAberto","modalDirecionarAberto","setModalDirecionarAberto","pacienteSelecionado","setPacienteSelecionado","idxPacienteDirecionar","setIdxPacienteDirecionar","alternarPopupMenu","prev","fecharOverlay","filtrarPacientes","textoBusca","buscaNumeros","filter","p","nomeNorm","cpfNorm","isNaN","Number","includes","abrirModalVerDados","paciente","abrirModalDirecionar","idx","fecharModais","handleDirecionarSubmit","e","preventDefault","form","FormData","target","novoStatus","get","novaPrioridade","map","i","prioridade","alert","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vinio/Hemo-System---Fron/src/components/Hemose/AdmMed.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport '../../styles/Adm.med.css';\r\n\r\n\r\nconst normalizarTexto = (texto) =>\r\n  texto\r\n    .normalize(\"NFD\")\r\n    .replace(/[̀-ͯ]/g, \"\")\r\n    .replace(/\\s+/g, \" \")\r\n    .trim()\r\n    .toLowerCase();\r\n\r\nconst formatarStatus = (status) => {\r\n  switch (status) {\r\n    case \"aguardando\":\r\n      return \"Aguardando\";\r\n    case \"triagem\":\r\n      return \"Em Triagem\";\r\n    case \"consulta\":\r\n      return \"Em Consulta\";\r\n    default:\r\n      return status;\r\n  }\r\n};\r\n\r\nconst pacientesIniciais = [\r\n  {\r\n    nome: \"Ana Paula Lima\",\r\n    cpf: \"123.456.789-00\",\r\n    status: \"aguardando\",\r\n    tipoAtendimento: \"Consulta\",\r\n    horario: \"08:30\",\r\n  },\r\n  {\r\n    nome: \"Carlos Souza\",\r\n    cpf: \"987.654.321-11\",\r\n    status: \"triagem\",\r\n    tipoAtendimento: \"Triagem\",\r\n    horario: \"08:45\",\r\n  },\r\n  {\r\n    nome: \"Fernanda Alves\",\r\n    cpf: \"111.222.333-44\",\r\n    status: \"consulta\",\r\n    tipoAtendimento: \"Consulta\",\r\n    horario: \"09:00\",\r\n  },\r\n];\r\n\r\nconst RecepcaoRedirecionamento = () => {\r\n  const [popupMenuAberto, setPopupMenuAberto] = useState(false);\r\n  const [overlayAberto, setOverlayAberto] = useState(false);\r\n  const [pacientes, setPacientes] = useState(pacientesIniciais);\r\n  const [busca, setBusca] = useState(\"\");\r\n  const [statusFiltro, setStatusFiltro] = useState(\"\");\r\n  const [pacientesFiltrados, setPacientesFiltrados] = useState(pacientesIniciais);\r\n  const [modalVerDadosAberto, setModalVerDadosAberto] = useState(false);\r\n  const [modalDirecionarAberto, setModalDirecionarAberto] = useState(false);\r\n  const [pacienteSelecionado, setPacienteSelecionado] = useState(null);\r\n  const [idxPacienteDirecionar, setIdxPacienteDirecionar] = useState(null);\r\n\r\n  const alternarPopupMenu = () => {\r\n    setPopupMenuAberto((prev) => !prev);\r\n    setOverlayAberto((prev) => !prev);\r\n  };\r\n\r\n  const fecharOverlay = () => {\r\n    setPopupMenuAberto(false);\r\n    setOverlayAberto(false);\r\n  };\r\n\r\n  const filtrarPacientes = () => {\r\n    const textoBusca = normalizarTexto(busca);\r\n    const buscaNumeros = textoBusca.replace(/\\D/g, \"\");\r\n\r\n    return pacientes.filter((p) => {\r\n      const nomeNorm = normalizarTexto(p.nome);\r\n      const cpfNorm = p.cpf.replace(/\\D/g, \"\");\r\n\r\n      if (!textoBusca) return !statusFiltro || p.status === statusFiltro;\r\n\r\n      if (buscaNumeros && !isNaN(Number(buscaNumeros)))\r\n        return (\r\n          cpfNorm.includes(buscaNumeros) && (!statusFiltro || p.status === statusFiltro)\r\n        );\r\n\r\n      return nomeNorm.includes(textoBusca) && (!statusFiltro || p.status === statusFiltro);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPacientesFiltrados(filtrarPacientes());\r\n  }, [busca, statusFiltro, pacientes]);\r\n\r\n  const abrirModalVerDados = (paciente) => {\r\n    setPacienteSelecionado(paciente);\r\n    setModalVerDadosAberto(true);\r\n    setOverlayAberto(true);\r\n  };\r\n\r\n  const abrirModalDirecionar = (idx) => {\r\n    setIdxPacienteDirecionar(idx);\r\n    setPacienteSelecionado(pacientes[idx]);\r\n    setModalDirecionarAberto(true);\r\n    setOverlayAberto(true);\r\n  };\r\n\r\n  const fecharModais = () => {\r\n    setModalVerDadosAberto(false);\r\n    setModalDirecionarAberto(false);\r\n    setOverlayAberto(false);\r\n  };\r\n\r\n  const handleDirecionarSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (idxPacienteDirecionar === null) return;\r\n\r\n    const form = new FormData(e.target);\r\n    const novoStatus = form.get(\"setorDestino\");\r\n    const novaPrioridade = form.get(\"prioridadeDestino\");\r\n\r\n    setPacientes((prev) =>\r\n      prev.map((p, i) =>\r\n        i === idxPacienteDirecionar ? { ...p, status: novoStatus, prioridade: novaPrioridade } : p\r\n      )\r\n    );\r\n\r\n    alert(\"Paciente direcionado com sucesso!\");\r\n    fecharModais();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Restante do componente permanece igual... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecepcaoRedirecionamento;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}